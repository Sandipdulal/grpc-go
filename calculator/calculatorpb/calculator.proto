syntax = "proto3";

package calculator;

option go_package="calculator/calculatorpb";

message SumRequest {
  int64 first_number=1;
  int64 second_number=2;
}

message SumResponse{
  int64 sum_result=1;
}

message PrimeNumberDecompositionRequest {
  int64 number=1;
}

message PrimeNumberDecompositionResponse {
  int64 result=1;
}

message ComputeAverageRequest{
  int64 number=1;
}

message ComputeAverageResponse{
  double result=1;
}

message FindMaximumRequest {
  int32 number=1;
}

message FindMaximumResponse {
  int32 result=1;
}

message SquareRootRequest {
  int32 number=1;
}

message SquareRootResponse {
  double number_root=1;
}

service CalculatorService{
  //Unary API
  rpc Sum(SumRequest) returns (SumResponse){};
  //Server streaming API
  rpc PrimeNumberDecomposition(PrimeNumberDecompositionRequest) returns (stream PrimeNumberDecompositionResponse){};
  //Client streaming API
  rpc ComputeAverage(stream ComputeAverageRequest) returns (ComputeAverageResponse){};
  //BiDi Streaming
  rpc FindMaximum (stream FindMaximumRequest) returns (stream FindMaximumResponse){}
  //error handling
  //this rpc will throw an error if the number is negative
  //the error returned will be of type status.INVALID_ARGUMENT
  rpc SquareRoot (SquareRootRequest) returns (SquareRootResponse) {};
}